import { Schema, model } from 'mongoose';
import multilingualSchema from '../../schemas/multilingual.schema';
import metaTagsSchema from '../../schemas/metaTags.schema';
import imageSchema from '../../schemas/image.schema';

const ProductsSchema = new Schema({

  userId: {
      type: Schema.Types.ObjectId,
      ref: 'User',
  },
  category: {
      type: Schema.Types.ObjectId,
      ref: 'Categories',
      index: true
  },
  title: String,
  description: String,
  price: Number,
  offerPrice: Boolean,
  priceWithAgreement: Boolean,
  images: [imageSchema],
  createDate: Date,
  canOfferPrice: Boolean,
  views: Number,
  adType: Number,
  condType: Number,

  accessoryType: String,
  accumulator: String,
  age: String,
  airFiltrationSystem: String,
  amountOfPrograms: String,
  answeringSystem: String,
  antibacterial: String,
  artificial: String,
  bagIncluded: String,
  battery: String,
  batteryCapacity: String,
  bicycleType: String,
  bitRate: String,
  bluetoothHeadphones: String,
  body: String,
  brand: String,
  bulletType: String,
  butt: String,
  calibre: String,
  camera: String,
  cameraType: String,
  capacity: String,
  cardSlot: String,
  cassetteType: String,
  catBreeds: String,
  cdDvdReader: String,
  changebleLen: String,
  changer: String,
  chargeType: String,
  class: String,
  color: String,
  colors: String,
  compatibleBrand: String,
  compatibleLaptopSize: String,
  componentsType: String,
  computerType: String,
  condition: String,
  connectorType: String,
  coolingType: String,
  cover: String,
  coverageArea: String,
  dcVoltage: String,
  decorative: String,
  destined: String,
  discType: String,
  dispenser: String,
  display: String,
  displayTechnology: String,
  displayType: String,
  dogBreeds: String,
  drawers: String,
  dryingMode: String,
  dubleBarrel: String,
  electric: String,
  electricityUsageClass: String,
  energyClass: String,
  energyType: String,
  extensible: String,
  extraMemoryIncluded: String,
  eyeglassesType: String,
  fax: String,
  features: String,
  fishSpecies: String,
  fmRadio: String,
  focalLength: String,
  foldable: String,
  forChildren: String,
  forInterbreed: String,
  form: String,
  frame: String,
  frameSize: String,
  fromAuthor: String,
  fruitSpecies: String,
  fuelType: String,
  galvanized: String,
  gearType: String,
  gender: String,
  genre: String,
  graphicsCardMemoryType: String,
  graphicsCardProcessor: String,
  handMade: String,
  handmade: String,
  hasOven: String,
  headsetType: String,
  heavyKey: String,
  heel: String,
  helmetSize: String,
  hookahType: String,
  instrument: String,
  integratedSpeakers: String,
  interface: String,
  internalMemory: String,
  inventoryType: String,
  iseBox: String,
  karaoke: String,
  keyboardType: String,
  laminated: String,
  laminating: String,
  language: String,
  light: String,
  lighting: String,
  loadType: String,
  loadingMechanizm: String,
  loudspeaker: String,
  lte4GNetwork: String,
  manual: String,
  material: String,
  materialType: String,
  maxSpeed: String,
  mechanism: String,
  mediaType: String,
  memoryCard: String,
  memoryRam: String,
  memorySlot: String,
  microcircuitType: String,
  microphone: String,
  microphoneIncluded: String,
  mixingDough: String,
  moistureRegulation: String,
  multiColor: String,
  nfc: String,
  noFrost: String,
  numberOfCameras: String,
  numberOfSeats: String,
  operatingSystem: String,
  opticalDisck: String,
  optics: String,
  origin: String,
  osVersion: String,
  packingType: String,
  paperType: String,
  period: String,
  phase: String,
  power: String,
  primaryCamera: String,
  printingTechnology: String,
  processorType: String,
  ram: String,
  ramCapacity: String,
  ramType: String,
  recorder: String,
  recordingDefinition: String,
  remoteControl: String,
  resistorsType: String,
  resolution: String,
  screen: String,
  screenSize: String,
  screenType: String,
  screenWidthMantle: String,
  selectTheType: String,
  selfieCamera: String,
  serviceArea: String,
  shockAbsorber: String,
  shortMovie: String,
  simMultiple: String,
  simSize: String,
  size: String,
  smartTv: String,
  socket: String,
  soft: String,
  speedometer: String,
  ssdCapacity: String,
  ssdType: String,
  steam: String,
  stone: String,
  stoneSurface: String,
  storageType: String,
  strings: String,
  structure: String,
  subject: String,
  substance: String,
  subwoofer: String,
  surfaceMaterial: String,
  systemType: String,
  systemsType: String,
  theTotalNumberOfLoudspeakers: String,
  totalPixels: String,
  touchScreen: String,
  touchscreen: String,
  transmitterType: String,
  tripodIncluded: String,
  twoStoried: String,
  type: String,
  typeOfAlcohol: String,
  typeOfBoards: String,
  typeOfBusiness: String,
  typeOfConnectors: String,
  typeOfDevice: String,
  typeOfDiode: String,
  typeOfFfowcharts: String,
  typeOfFurniture: String,
  typeOfFuses: String,
  typeOfLed: String,
  typeOfLight: String,
  typeOfMaterials: String,
  typeOfMeasuring: String,
  typeOfOptocouplers: String,
  typeOfRadiators: String,
  typeOfSensors: String,
  typeOfSolderingIron: String,
  typeOfSwitches: String,
  typeOfTools: String,
  typeOfTransformers: String,
  typeOfWires: String,
  typeSpecialMachinery: String,
  usb: String,
  usbVersion: String,
  vegetableSpecies: String,
  vehicleType: String,
  videocard: String,
  viewingWindow: String,
  voiceNavigation: String,
  volume: String,
  waterResistance: String,
  wetCleaning: String,
  wiFi: String,
  wireless: String,
  withBasin: String,
  withBow: String,
  withDrawerS: String,
  withFlash: String,
  withGas: String,
  withHeadphone: String,
  withLight: String,
  withMemoryCards: String,
  withMirror: String,
  withScreen: String,
  withSpringMattress: String,
  year: String,
  Ð²reedOfRabbit: String,
  threeD: String,
  threeGNetwork: String,
  simCard: String,
});

export default model('Products', ProductsSchema);
